/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}body,h1,h2,h3{margin:0}body,html,li a:hover{color:#6B645E}header,li a h2{text-align:center}footer,header{background-color:#A0DAC4;color:#3C2E3B}html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%} menu,article,aside,details,footer,header,nav,section{display:block}h1{font-size:2em}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{}button,select{text-transform:none}[type=submit], [type=reset],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:social;src:url(../fonts/myicons..eot);src:url(../fonts/myicons.?#iefix) format("embedded-opentype"),url(../fonts/myicons.woff) format("woff"),url(../fonts/myicons.ttf) format("truetype"),url(../fonts/myicons.#myicons) format("svg");font-weight:400;font-style:normal}.icon:before{font-family:social}@font-face{font-family:Bringin;src:url(../fonts/Bringin.eot);src:url(../fonts/Bringin.eot?#iefix) format("embedded-opentype"),url(../fonts/Bringin.woff) format("woff"),url(../fonts/Bringin.ttf) format("truetype");font-weight:400;font-style:normal}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}a,a:active,a:focus,a:hover,a:visited{color:inherit;text-decoration:none}body,html{height:100%;background-color:#CCEFD9;font-weight:700}footer a,header{font-weight:800}button{cursor:pointer}.clearfix:after{content:'';display:table;height:0;clear:both;font-family:Roboto,sans-serif}.container,footer .wrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox}.container{display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:100%}.content{-webkit-box-flex:1;-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto}.wrapper{width:1200px;margin:auto}li,li a img{margin-bottom:20px}@media only screen and (max-width:1024px){.wrapper{max-width:95%}}ul{padding-left:0}.description,footer,header{padding:20px 0}li{list-style:none}li a{line-height:24px}li a img{width:100%}footer{-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}footer .wrapper{display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.carousel__navigation,.main-info{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox}header{font-size:40px}.description{font-weight:300}section{padding:20px;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:49%;border:2px solid #D2C8BE;border-radius:10px}.main-info{display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:60px 0}.carousel__navigation{display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.carousel__wrapper{overflow:hidden}.carousel__box{width:9999px;-webkit-transition:margin-left 250ms;-o-transition:margin-left 250ms;transition:margin-left 250ms;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.carousel__item{width:544px}.title-description{margin:0 10px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
