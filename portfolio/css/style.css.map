{"version":3,"file":"style.css","sources":["style.scss","_bourbon.scss","settings/_prefixer.scss","settings/_px-to-em.scss","settings/_asset-pipeline.scss","functions/_assign-inputs.scss","functions/_contains.scss","functions/_contains-falsy.scss","functions/_is-length.scss","functions/_is-light.scss","functions/_is-number.scss","functions/_is-size.scss","functions/_px-to-em.scss","functions/_px-to-rem.scss","functions/_shade.scss","functions/_strip-units.scss","functions/_tint.scss","functions/_transition-property-name.scss","functions/_unpack.scss","functions/_modular-scale.scss","helpers/_convert-units.scss","helpers/_directional-values.scss","helpers/_font-source-declaration.scss","helpers/_gradient-positions-parser.scss","helpers/_linear-angle-parser.scss","helpers/_linear-gradient-parser.scss","helpers/_linear-positions-parser.scss","helpers/_linear-side-corner-parser.scss","helpers/_radial-arg-parser.scss","helpers/_radial-positions-parser.scss","helpers/_radial-gradient-parser.scss","helpers/_render-gradients.scss","helpers/_shape-size-stripper.scss","helpers/_str-to-num.scss","css3/_animation.scss","css3/_appearance.scss","css3/_backface-visibility.scss","css3/_background.scss","css3/_background-image.scss","css3/_border-image.scss","css3/_calc.scss","css3/_columns.scss","css3/_filter.scss","css3/_flex-box.scss","css3/_font-face.scss","css3/_font-feature-settings.scss","css3/_hidpi-media-query.scss","css3/_hyphens.scss","css3/_image-rendering.scss","css3/_keyframes.scss","css3/_linear-gradient.scss","css3/_perspective.scss","css3/_placeholder.scss","css3/_radial-gradient.scss","css3/_selection.scss","css3/_text-decoration.scss","css3/_transform.scss","css3/_transition.scss","css3/_user-select.scss","addons/_border-color.scss","addons/_border-radius.scss","addons/_border-style.scss","addons/_border-width.scss","addons/_buttons.scss","addons/_clearfix.scss","addons/_ellipsis.scss","addons/_font-stacks.scss","addons/_hide-text.scss","addons/_margin.scss","addons/_padding.scss","addons/_position.scss","addons/_prefixer.scss","addons/_retina-image.scss","addons/_size.scss","addons/_text-inputs.scss","addons/_timing-functions.scss","addons/_triangle.scss","addons/_word-wrap.scss","_bourbon-deprecated-upcoming.scss","icons/_all.scss","icons/_iconfont_variables.scss","_fonts.scss","_variables.scss","_layout.scss","_mixins.scss","_main.scss"],"sourcesContent":["$global-font-icon: 'social';\r\n@import 'bourbon'; // http://bourbon.io/\r\n@import 'icons/all'; //icons\r\n@import 'fonts'; // fonts\r\n@import 'variables'; // colors, etc...\r\n@import 'layout'; // responsive grid and media queries\r\n@import 'mixins'; // custom mixins\r\n@import 'main'; //main style","// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n","@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n","$em-base: 16px !default;\n","@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n","@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n","@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","@import 'iconfont_variables';\r\n// @import 'iconfont_icons';\r\n","@font-face {\r\n  font-family: $global-font-icon;\r\n  src:url(\"../fonts/myicons..eot\");\r\n  src:url(\"../fonts/myicons.?#iefix\") format(\"embedded-opentype\"),\r\n    url(\"../fonts/myicons.woff\") format(\"woff\"),\r\n    url(\"../fonts/myicons.ttf\") format(\"truetype\"),\r\n    url(\"../fonts/myicons.#myicons\") format(\"svg\");\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n\r\n\r\n$icon-cv: \"\\EA01\" !default;\r\n\r\n$icon-envelope: \"\\EA02\" !default;\r\n\r\n$icon-facebook: \"\\EA03\" !default;\r\n\r\n$icon-github: \"\\EA04\" !default;\r\n\r\n$icon-github_hover: \"\\EA05\" !default;\r\n\r\n$icon-linkedin: \"\\EA06\" !default;\r\n\r\n$icon-skype: \"\\EA07\" !default;\r\n\r\n$icon-smartphone: \"\\EA08\" !default;\r\n\r\n\r\n.icon {\r\n  &:before, &:after {\r\n    font-family: $global-font-icon\r\n  }\r\n}","@font-face {\r\n    font-family: 'appleberry';\r\n    src: url('../fonts/appleberry.eot?#iefix') format('embedded-opentype'),\r\n         url('../fonts/appleberry.woff') format('woff'),\r\n         url('../fonts/appleberry.ttf') format('truetype');\t \r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'telegraphem';\r\n    src: url('../fonts/telegraphem.eot');   \r\n    src: url('../fonts/telegraphem.eot?#iefix') format('embedded-opentype'),\r\n         url('../fonts/telegraphem.woff') format('woff'),\r\n         url('../fonts/telegraphem.ttf') format('truetype');\t \r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n","// colors\n\n$color-1: #008200; //green\n$color-2: #EA4D01; //orange\n$color-3: #dadcdc; //grey\n$color-4: #D5E2AB; //light green\n$color-5: #ACACAC; //dark grey\n$color-6: #ffffff; //white\n\n// fonts \n\n$primary-font: 'Roboto', sans-serif;\n$secondary-font: 'Vollkorn', serif;\n\n// animation duration\n\n$fold-animation: .5s;\n$fold-content-animation: .2s*(3+1)/2; // replace 3 with number of elements that you want to animate","// breakpoints\n   \n$S:     480px;   \n$M:     600px;     \n$L:     1100px;     \n\n// media queries\n\n@mixin MQ($canvas) {\n  @if $canvas == S {\n   @media only screen and (min-width: $S) { @content; } \n  }\n  @else if $canvas == M {\n   @media only screen and (min-width: $M) { @content; } \n  }\n  @else if $canvas == L {\n   @media only screen and (min-width: $L) { @content; } \n  }\n}\n\n// super light grid - it works with the .cd-container class inside style.scss\n\n@mixin column($percentage, $float-direction:left) {\n  width: 100% * $percentage;\n  float: $float-direction;\n}\n\n","// center vertically and/or horizontally an absolute positioned element\n\n@mixin center($xy:xy) {\n  @if $xy == xy {\n    left: 50%;\n    top: 50%;\n    bottom: auto;\n    right: auto;\n    @include transform(translateX(-50%) translateY(-50%));\n  }\n  @else if $xy == x {\n    left: 50%;\n    right: auto;\n    @include transform(translateX(-50%));\n  }\n  @else if $xy == y {\n    top: 50%;\n    bottom: auto;\n    @include transform(translateY(-50%));\n  }\n}\n\n// antialiasing mode font rendering\n\n@mixin font-smoothing {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n","\r\n*, *::after, *::before {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n\tfont-size: 62.5%;\r\n}\r\n\r\nbody {\r\n\tfont: {\r\n\t\tsize: 1.6rem;\r\n\t\tfamily: $primary-font; // variables inside partials > _variables.scss\r\n\t}\r\n\tcolor: $color-1;\r\n}\r\n\r\na {\r\n\tcolor: $color-2;\r\n\ttext-decoration: none;\r\n}\r\n\r\nh1, h2 {\r\n\t// font-family: $secondary-font;\r\n}\r\n\r\n.clearfix:after {\r\n\tcontent: '';\r\n\theight: 0;\r\n\tdisplay: table;\r\n\tclear: both;\r\n}\r\n\r\n/* -------------------------------- шi\r\n\r\nPatterns - reusable parts of our design\r\n\r\n-------------------------------- */\r\n\r\n.overflow-hidden {\r\n\toverflow: hidden;\r\n}\r\n\r\n/* -------------------------------- \r\n\r\nHeader\r\n\r\n-------------------------------- */\r\n\r\nheader {\r\n\theight: 390px;\r\n\tposition: relative;\r\n\tpadding-top: 20px;\r\n\ttext-align: center;\r\n\r\n\t&:before {\r\n\tcontent:'';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\t\t\t\r\n\tbackground-image: url(../images/header_bg2.jpg);\r\n\tbackground-size: cover;\r\n\tbackground-position: 0;\r\n\topacity: 0.5;\r\n    display: block;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n\t}\r\n\r\n\th1 {\r\n\t\tfont-size: 2.2rem;\r\n\t\tcolor: $color-1;\r\n\t}\r\n\r\n\t\t\t \t@media (min-width: 450px) and (max-width: 549px) {\r\n\theight: 320px;\r\n\t }\r\n\t \t\t\t \t@media (max-width: 449px) {\r\n\theight: 100px;\r\n\t }\r\n}\r\n\r\n\r\n.mypic {\r\n    width: 160px;\r\n    height: 200px;\r\n\tfloat: left;\r\n}\r\n\r\n\r\n.laptop {\r\n\tfont-size: 24px;\r\n\tmargin-top: 5px;\r\n\tbackground-image: url(../images/book_open.gif);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-size: auto 370px;\r\n\theight: 100%;\r\n\twidth: 550px;\r\n    padding: 30px;\r\n\tdisplay: inline-block;\r\n\t \t@media (min-width: 450px) and (max-width: 549px) {\r\n\t\t    background-size: auto 300px;\r\n\t\t    width: 445px;\r\n\t\t        font-size: 16px;\r\n\t }\r\n\t \t \t\t\t \t@media (max-width: 449px) {\r\nbackground-size: auto 215px;\r\n    width: 325px;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n\t }\r\n\r\n}\r\n\r\n.avatar {\r\n\twidth: 100px;\r\n\theight: 100px;\r\n\topacity: 0.9;\r\n\tborder-radius: 20px;\r\n\tbackground-image: url(../images/me.jpg);\r\n    background-size: 150px;\r\n\tbackground-position: 275px 365px;\r\n\tfloat: left;\r\n\t\t@media (min-width: 450px) and (max-width: 549px) {\r\n\t\t\t    width: 70px;\r\n    height: 70px;\r\n        background-position: 260px 360px;\r\n\t }\r\n\t \t \t \t\t\t \t@media (max-width: 449px) {\r\ndisplay: none;\r\n\t }\r\n\r\n}\r\n\r\n.user {\r\n\r\n\t \t \t \t\t\t \t@media (max-width: 449px) {\r\ndisplay: inline-block;\r\n\t }\r\n\r\n}\r\n\r\n.user_info {\r\n\tmargin-left: 50px;\r\n\tmargin-top: 15px;\r\n\tfloat: left;\r\n\tfont-family: 'telegraphem';\r\n\tcolor: #3B8200;\r\n\tfont-weight: bold;\r\n\ttext-shadow: 3px 1px 5px rgba(248, 136, 11, 0.5);\r\n\tp {\r\n\t\tmargin: 10px 0;\r\n\t}\r\n\t\t \t@media (min-width: 450px) and (max-width: 549px) {\r\n\tmargin-top: 5px;\r\n\t }\r\n\t \t \t \t\t\t \t@media (max-width: 449px) {\r\nmargin: 0;\r\ndisplay: inline-block;\r\n\t }\r\n}\r\n\r\n.user_name {\r\n\ttext-transform: uppercase;\r\n}\r\n\r\n.typing {\r\n\tmargin-top: 30px;\r\n\tborder-radius: 5px;\r\n\tfont-size: 14px;\r\n\tfont-family: 'telegraphem';\r\n\tcolor: #B5651E;\r\n\ttext-align: left;\r\n\tfont-weight: bold;\r\n\twidth: 95%;\r\n\t\t\t \t@media (min-width: 450px) and (max-width: 549px) {\r\n\tmargin-top: 10px;\r\n\tfont-size: 12px;\r\n\t }\r\n\t \t \t \t \t\t\t \t@media (max-width: 449px) {\r\ndisplay: none;\r\n\t }\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n  visibility: hidden;\r\n}\r\n\r\n/* ----- blinking cursor animation ----- */\r\n.typed-cursor{\r\n\tfont-size: 25px;\r\n\tcolor: #693600;\r\n  opacity: 0.5;\r\n  -webkit-animation: blink 0.95s infinite;\r\n  -moz-animation: blink 0.95s infinite;\r\n  -ms-animation: blink 0.95s infinite;\r\n  -o-animation: blink 0.95s infinite;\r\n  animation: blink 0.95s infinite;\r\n}\r\n\r\n@-keyframes blink{\r\n  0% { opacity:1; }\r\n  50% { opacity:0; }\r\n  100% { opacity:1; }\r\n}\r\n@-webkit-keyframes blink{\r\n  0% { opacity:1; }\r\n  50% { opacity:0; }\r\n  100% { opacity:1; }\r\n}\r\n@-moz-keyframes blink{\r\n  0% { opacity:1; }\r\n  50% { opacity:0; }\r\n  100% { opacity:1; }\r\n}\r\n@-ms-keyframes blink{\r\n  0% { opacity:1; }\r\n  50% { opacity:0; }\r\n  100% { opacity:1; }\r\n}\r\n@-o-keyframes blink{\r\n  0% { opacity:1; }\r\n  50% { opacity:0; }\r\n  100% { opacity:1; }\r\n}\r\n\r\n\r\n\r\n/* -------------------------------- \r\n\r\nMain content\r\n\r\n-------------------------------- */\r\n\r\n\r\n.cd-main {\r\n\toverflow-x: hidden;\r\n\tmargin-top: -20px;\r\n\tposition: relative;\t\r\n\r\n\t&::before {\r\n\t\t/* never visible - this is used in jQuery to check the current MQ */ \r\n\t\tdisplay: none;\r\n\t\tcontent: 'mobile';\r\n\t} \r\n\r\n\t> * {\r\n\t\t@include transition(transform $fold-animation $fold-content-animation);\r\n\t}\r\n\t\r\n\t&.fold-is-open > * {\r\n\t\t/* on mobile - translate .cd-main content to the right when the .cd-folding-panel is open */\r\n\t\t@include transform(translateX(100%));\r\n\t\t@include transition(transform $fold-animation 0s);\r\n\t}\r\n\r\n\t@include MQ(M) {\r\n\r\n\t\t&.fold-is-open > * {\r\n\t\t\t@include transform(translateX(600px));\r\n\t\t}\r\n\t}\r\n\r\n\t@include MQ(L) {\r\n\r\n\t\t&::before {\r\n\t\t\t/* never visible - this is used in jQuery to check the current MQ */ \r\n\t\t\tcontent: 'desktop';\r\n\t\t}\r\n\r\n\t\t&.fold-is-open > * {\r\n\t\t\t/* reset style - on bigger devices we translate the gallery items */\r\n\t\t\t@include transform(translateX(0));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.cd-gallery {\r\n\t@include clearfix;\r\n\tlist-style: none;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\t&::before {\r\n\t\t/* this is the dark layer covering the .cd-gallery when the .cd-folding-panel is open */\r\n\t\tdisplay: block;\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tz-index: 1;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tbackground-color: rgba($color-5, .6);\r\n\t\topacity: 0;\r\n\t\tvisibility: hidden;\r\n\t\t@include transition(opacity  $fold-animation $fold-content-animation, visibility 0s $fold-animation+$fold-content-animation);\r\n\t}\r\n\r\n\t.fold-is-open &::before {\r\n\t\tvisibility: visible;\r\n\t\topacity: 1;\r\n\t\t@include transition(opacity  $fold-animation 0s, visibility 0s 0s);\r\n\t}\r\n}\r\n\r\n.cd-item {\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\ttext-align: center;\r\n\tposition: relative;\r\n    z-index: 1;\r\n\r\n\t/* Force Hardware Acceleration */\r\n\t@include transform(translateZ(0));\r\n\t@include backface-visibility(hidden);\r\n\r\n\t@include transition(transform $fold-animation $fold-content-animation);\r\n\r\n\t> a {\r\n\t\tdisplay: table;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\toverflow: hidden;\r\n\t\tcolor: $color-2;\r\n\t\t@include font-smoothing;\r\n\r\n\r\n\t\t&.dark-text {\r\n\t\t\tcolor: $color-1;\r\n\r\n\t\t\tb {\r\n\t\t\t\tborder-color: $color-2;\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\r\n\tdiv {\r\n\t\tdisplay: table-cell;\r\n\t\tvertical-align: middle;\r\n\t}\r\n\r\n\r\n\r\n\th2 {\r\n\t\tfont-family: 'appleberry';\r\n\t\tfont-size: 36px;\r\n\t\ttext-transform: uppercase;\r\n\t\tletter-spacing: 3px;\r\n\t\tbackground-color: rgba(255, 255, 255, 0.5);\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0 20px;\r\n    \tborder-radius: 30px;\r\n    \t    @media (max-width: 359px) {\r\n\t\t\tfont-size: 24px;\r\n\t\t\tpadding: 0;\r\n\t\t\t}\r\n\t}\r\n\r\n\tp {\r\n\t\tline-height: 1.2;\r\n\t\tfont-size: 1.4rem;\r\n\t\topacity: 0.6;\r\n\t\tpadding: 1em 0;\r\n\t}\r\n\r\n\tb {\r\n\t\tdisplay: inline-block;\r\n\t\tfont: {\r\n\t\t\tsize: 1.2rem;\r\n\t\t\tweight: bold;\r\n\t\t}\r\n\t\ttext-transform: uppercase; \r\n\t\tletter-spacing: 1px;\r\n\t\tpadding: 1em 1.3em;\r\n\t\tborder-radius: 50em;\r\n\t\tbackground-color: $color-6;\r\n\t}\r\n\t\r\n\t@include MQ(L) {\r\n\t\t@include column(.5);\r\n\t\theight: 520px;\r\n\t\t@include transition(transform $fold-animation $fold-content-animation);\r\n\r\n\t\th2 {\r\n\t\t\tfont-size: 36px;\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\tfont-size: 1.6rem;\r\n\t\t}\r\n\r\n\t\th2, p {\r\n\t\t\t@include transform(translateY(30px));\r\n\t\t\t@include transition(transform 0.3s 0.1s);\r\n\t\t}\r\n\r\n\t\tb {\r\n\t\t\topacity: 0;\r\n\t\t\t@include transform(translateY(20px));\r\n\t\t\t@include transition(opacity 0.3s 0s, transform 0.3s 0s);\r\n\t\t}\r\n\r\n\t\t.no-touch & a:hover {\r\n\r\n\t\t\th2, p {\r\n\t\t\t\t@include transform(translateY(0));\r\n\t\t\t\t@include transition(transform 0.3s 0s);\r\n\t\t\t}\r\n\r\n\t\t\tb {\r\n\t\t\t\topacity: 1;\r\n\t\t\t\t@include transform(translateY(0));\r\n\t\t\t\t@include transition(opacity 0.3s 0.1s, transform 0.3s 0.1s);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.fold-is-open & {\r\n\t\t\t@include transition(transform $fold-animation 0s);\r\n\t\t\t@include transform(translateX(-400px));\r\n\r\n\t\t\t&:nth-of-type(2n) {\r\n\t\t\t\t@include transform(translateX(400px));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.cd-item:hover .cd-item-bg1,\r\n.cd-item:hover .cd-item-bg2,\r\n.cd-item:hover .cd-item-bg3,\r\n.cd-item:hover .cd-item-bg4 {\r\n\topacity: 1;\r\n}\r\n\r\n.cd-item:hover h2 {\r\n\tbackground-color: white;\r\n\r\n}\r\n\r\n.cd-item-bg1, .cd-item-bg2, .cd-item-bg3, .cd-item-bg4 {\r\n\tposition: absolute;\r\n    z-index: -1;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\tbackground-size: cover;\r\n    opacity: .5;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n\r\n.cd-item-bg1 {\r\n\tbackground-image: url(../images/book1.jpg);\r\n}\r\n\r\n.cd-item-bg2 {\r\n\tbackground-image: url(../images/book2.jpg);\r\n}\r\n\r\n.cd-item-bg3 {\r\n\tbackground-image: url(../images/book4.jpg);\r\n}\r\n\r\n.cd-item-bg4 {\r\n\tbackground-image: url(../images/book3.jpg);\r\n}\r\n\r\n/* -------------------------------- \r\n\r\nfolding panel\r\n\r\n-------------------------------- */\r\n\r\n.cd-folding-panel {\r\n\tposition: fixed;\r\n\tz-index: 1;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 100vh;\r\n\twidth: 100%;\r\n\tvisibility: hidden;\r\n\toverflow: hidden;\r\n\t\r\n\t@include transition(visibility 0s $fold-animation+$fold-content-animation);\r\n\r\n\t.fold-left,\r\n\t.fold-right {\r\n\t\t/* the :after elements of .fold-left and .fold-right are the 2 fold sides */\r\n\t\twidth: 100%;\r\n\t\theight: 100vh;\r\n\t\toverflow: hidden;\r\n\t\tposition: relative;\r\n\r\n\t\t/* enable a 3D-space for children elements */\r\n\t\t@include perspective(2000px);\r\n\r\n\t\t&::after {\r\n\t\t\t/* 2 fold sides */\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\r\n\t\t\t/* Force Hardware Acceleration */\r\n\t\t\t@include transform(translateZ(0));\r\n\t\t\t@include backface-visibility(hidden);\r\n\r\n\t\t\t@include transition(transform $fold-animation $fold-content-animation, background-color $fold-animation $fold-content-animation);\r\n\t\t}\r\n\t}\r\n\r\n\t.fold-right {\r\n\t\t@include perspective-origin(0% 50%);\r\n\r\n\t\t&::after {\r\n\t\t\t@include transform-origin(right center);\r\n\t\t\t@include transform(translateX(-100%) rotateY(-90deg));\r\n\t\t\tbackground-color: darken($color-3, 10%);\r\n\t\t}\r\n\t}\r\n\r\n\t.fold-left {\r\n\t\t/* on mobile only the right fold side is visible */\r\n\t\tdisplay: none;\r\n\r\n\t\t&::after {\r\n\t\t\tbackground-color: lighten($color-3, 12%);\r\n\t\t}\r\n\t}\r\n\r\n\t.cd-close {\r\n\t\t/* 'X' close icon */\r\n\t\tposition: absolute;\r\n\t\tz-index: 1;\r\n\t\tdisplay: inline-block;\r\n\t\ttop: 10px;\r\n\t\tright: 10px;\r\n\t\theight: 44px;\r\n\t\twidth: 44px;\r\n\r\n\t\t/* image replacement */\r\n\t\toverflow: hidden;\r\n\t\ttext-indent: 100%;\r\n\t\twhite-space: nowrap;\r\n\r\n\t\topacity: 0;\r\n\t\t@include transition(opacity .2s 0s);\r\n\r\n\t\t&::after, \r\n\t\t&::before {\r\n\t\t\t/* lines of 'X' icon */\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\theight: 3px;\r\n\t\t\twidth: 32px;\r\n\t\t\tleft: 50%;\r\n\t    \ttop: 50%;\r\n\t\t\tbackground-color: $color-2;\t\r\n\t\t\t@include backface-visibility(hidden);\r\n\t\t\t@include transition(opacity .2s);\r\n\t\t}\r\n\r\n\t\t&::after {\r\n\t\t\t@include transform(translateX(-50%) translateY(-50%) rotate(45deg));\r\n\t\t}\r\n\r\n\t\t&::before {\r\n\t\t\t@include transform(translateX(-50%) translateY(-50%) rotate(-45deg));\r\n\t\t}\r\n\t}\r\n\r\n\t&.is-open {\r\n\tbackground: radial-gradient(ellipse at center, rgba(255,232,209,1) 0%,rgba(255,207,160,1) 53%,rgba(255,189,109,1) 100%);\t\t\r\n\t\tvisibility: visible;\r\n\t\t@include transition(visibility 0s 0s);\r\n\r\n\t\t.fold-right::after,\r\n\t\t.fold-left::after {\r\n\t\t\t@include transform(translateX(0));\r\n\t\t\t@include transition(transform $fold-animation 0s, background-color $fold-animation 0s);\r\n\t\t}\r\n\r\n\t\t.fold-right::after {\r\n\t\t\tbackground-color: lighten($color-3, 12%);\r\n\t\t}\r\n\r\n\t\t.cd-close {\r\n\t\t\topacity: 1;\r\n\t\t\t@include transition(opacity .2s $fold-animation);\r\n\t\t}\r\n\t}\r\n\r\n\t@include MQ(M) {\r\n\t\twidth: 600px;\r\n\t}\r\n\r\n\t@include MQ(L) {\r\n\t\t@include center(x);\r\n\t\twidth: 800px;\r\n\r\n\t\t.fold-left,\r\n\t\t.fold-right {\r\n\t\t\t@include column(.5);\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\r\n\t\t.fold-right {\r\n\t\t\t/* change perspective-origin so that the 2 fold sides have the same vanishing point */\r\n\t\t\t@include perspective-origin(0% 50%);\r\n\r\n\t\t\t&::after {\r\n\t\t\t\t@include transform-origin(right center);\r\n\t\t\t\t@include transform(translateX(-100%) rotateY(-90deg));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.fold-left {\r\n\t\t\tdisplay: block;\r\n\t\t\t/* change perspective-origin so that the 2 fold sides have the same vanishing point */\r\n\t\t\t@include perspective-origin(100% 50%);\r\n\r\n\t\t\t&::after {\r\n\t\t\t\t@include transform-origin(left center);\r\n\t\t\t\t@include transform(translateX(100%) rotateY(90deg));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.cd-fold-content {\r\n\tbackground: radial-gradient(ellipse at center, rgba(255,232,209,1) 0%,rgba(255,207,160,1) 53%,rgba(255,189,109,1) 100%);\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tpadding: 4em 2em;\r\n\r\n\tvisibility: hidden;\r\n\t@include transition(visibility 0s $fold-content-animation);\r\n\r\n\t> * {\r\n\t\topacity: 0;\r\n\t\t@include transform(translateY(20px));\r\n\t}\r\n\t\r\n\th2 {\r\n\t\t// font-family: 'HelveticaNeueLTStd-Md';\r\n\t\tfont-size: 36px;\r\n\t\ttext-transform: uppercase;\r\n\t\tmargin-bottom: 40px;\r\n\t\ttext-align: center;\r\n\t\t@include transition(transform $fold-content-animation/2 $fold-content-animation/2, opacity $fold-content-animation/2 $fold-content-animation/2);\r\n\t@media (max-width: 599px) {\r\n\t\t\tfont-size: 26px;\r\n\t\t\t    margin-bottom: 15px;\r\n\t\t}\r\n\t}\r\n\r\n\th3 {\r\n\t\tfont-size: 30px;\r\n\t\tmargin-top: 30px;\r\n\t\tmargin-bottom: 0;\r\n\t\t\t@media (max-width: 599px) {\r\n\t\t\tfont-size: 20px;\r\n\t\t}\r\n\t}\r\n \tul {\r\n \t\tcolor: #5B5B5B;\r\n \t\t\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tpadding-left: 10px;\r\n\t\t}\r\n \t}\r\n\r\n \tli {\r\n\t\tline-height: 22px;\r\n\t\tfont-size: 18px;\r\n\t\tmargin-top: 10px;\r\n\t\t\t@media (max-width: 599px) {\r\n\t\t\tfont-size: 14px;\r\n\t\tline-height: 14px;\t\t\t\r\n\t\t}\r\n \t}\r\n\r\n\th4 {\r\n\t\tfont-size: 20px;\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #5B5B5B;\r\n\t\tline-height: 16px;\r\n\t\tmargin-bottom: 0;\r\n\t\t\t.exp_period {\r\n\t\t\t\tfont-style: italic;\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\t\t\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tfont-size: 12px;\t\t\r\n\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tfont-size: 14px;\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tp, em {\r\n\t\t// font-family: 'HelveticaNeueLTStd-Md';\r\n\t\tfont-size: 18px;\r\n\t\tline-height: 24px;\r\n\t\t\tcolor: #5B5B5B;\r\n\t\t\ttext-align: justify;\r\n\t\t\t\t\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tline-height: 16px;\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tem {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 1em 0;\r\n\t\t// font-family: $secondary-font;\r\n\t\tfont-size: 1.8rem;\r\n\t\tcolor: lighten($color-1, 30%);\r\n\r\n\t\t@include transition(transform $fold-content-animation/2 $fold-content-animation/4, opacity $fold-content-animation/2 $fold-content-animation/4);\r\n\t}\r\n\r\n\tp {\r\n\t\tmargin-bottom: 1em;\r\n\t\tfont-size: 1.4rem;\r\n\t\t@include transition(transform $fold-content-animation/2 0s, opacity $fold-content-animation/2 0s);\r\n\t}\r\n\r\n\t.is-open & {\r\n\t\toverflow-y: auto;\r\n\t\t-webkit-overflow-scrolling: touch;\r\n\t\tvisibility: visible;\r\n\t\t@include transition(visibility 0s $fold-animation);\r\n\r\n\t\t> * {\r\n\t\t\topacity: 1;\r\n\t\t\t@include transform(translateY(0));\r\n\t\t}\r\n\r\n\t\th2 {\r\n\t\t\t@include transition(transform $fold-content-animation/2 $fold-animation, opacity $fold-content-animation/2 $fold-animation);\r\n\t\t}\r\n\r\n\t\tem {\r\n\t\t\t@include transition(transform $fold-content-animation/2 $fold-animation+$fold-content-animation/4, opacity $fold-content-animation/2 $fold-animation+$fold-content-animation/4);\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\t@include transition(transform $fold-content-animation/2 $fold-animation+$fold-content-animation/2, opacity $fold-content-animation/2 $fold-animation+$fold-content-animation/2);\r\n\t\t}\r\n\t}\r\n\r\n\t@include MQ(M) {\r\n\t\th2 {\r\n\t\t\tfont-size: 36px;\r\n\t\t}\r\n\t}\r\n\r\n\t@include MQ(L) {\r\n\t\tpadding: 4em;\r\n\r\n\t\t> * {\r\n\t\t\t@include transform(translateY(40px));\r\n\t\t}\r\n\r\n\t\tem {\r\n\t\t\tfont-size: 2.2rem;\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\tfont-size: 18px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* -------------------------------- \r\n\r\nJavascript disabled\r\n\r\n-------------------------------- */\r\n\r\n.no-js .cd-fold-content.single-page {\r\n\tposition: static;\r\n\tvisibility: visible;\r\n\theight: auto;\r\n\tbackground-color: $color-3;\r\n\r\n\t> * {\r\n\t\topacity: 1;\r\n\t\t@include transform(translateY(0));\r\n\t}\r\n}\r\n\r\n.sl {\r\n\tmargin-top: 75px;\r\n\t    @media (max-width: 768px) {\r\n\t\t\tmargin-top: 50px;\t\r\n\t}\r\n}\r\n\r\n.skills {\r\n    background-color: rgba(255,255, 255, 0.5);\r\n    width: auto;\r\n    height: 100px;\r\n    margin-left: 10px;\r\n    border-radius: 10px;\r\n\twidth: auto;\r\n\theight: 100px;\r\n\t    @media (max-width: 768px) {\r\n\t\t\theight: 50px;\t\r\n\t}\r\n}\r\n\r\n\r\n\r\n.selected {\r\n\tfont-weight: bold;\r\n}\r\n\r\n.selected_it {\r\n\tfont-weight: 300;\r\n}\r\n\r\n.contact_icon {\r\n\twidth: 40px;\r\n\theight: 40px;\r\n\tmargin-right: 25px;\r\n\tvertical-align: middle;\r\n\t\t@media (max-width: 599px) {\r\n\t\t\t\tmargin-right: 10px;\r\n\t\t\t\t\twidth: 25px;\r\n\theight: 25px;\r\n\t\t\t}\t\r\n}\r\n\r\n.icon_git {\r\n\tcolor: #000000;\r\n\t&:before {\r\n\t\tcontent: $icon-github;\r\n\t}\r\n}\r\n\r\n\r\n.icon_fb {\r\n\tcolor: #3B5998;\r\n\t&:before {\r\n\t\tcontent: $icon-facebook;\r\n\t}\r\n}\r\n\r\n.icon_linkedin {\r\n\tcolor: #0E76A8;\r\n\t&:before {\r\n\t\tcontent: $icon-linkedin;\r\n\t}\r\n}\r\n\r\n.icon_cv {\r\n\t\tdisplay: flex;\r\n\talign-items:center;\r\n\tcolor: $color-6;\r\n\tfont-weight: 400;\r\n\tfont-size: 30px;\r\n\tjustify-content: flex-start;\r\n\t&:before {\r\n\t\tcontent: $icon-cv;\r\n\t}\r\n\t\t\t    \t\t\t@media (max-width: 599px) {\r\n\t\t\t\tfont-size: 20px;\r\n\t\t\t}\r\n}\r\n\r\n.icon_git, .icon_fb, .icon_linkedin {\r\n\t font-size: 30px;\r\n\t \t\t\t    \t\t\t@media (max-width: 599px) {\r\n\t\t\t\tfont-size: 20px;\r\n\t\t\t}\r\n}\r\n\r\n\r\n.cv {\r\n\tfont-size: 16px;\r\n\tmargin-left: 5px;\r\n\t\t    \t\t\t@media (max-width: 599px) {\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t}\r\n\t\t\t\t\r\n}\r\n\r\n\r\n.icon_git:hover, .icon_fb:hover, .icon_linkedin:hover {\r\n\t color:$color-2;\r\n}\r\n\r\n\r\n\r\n.my_skills {\r\n\tmargin-bottom: 60px;\r\n\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tmargin-bottom: 30px;\r\n\t\t}\r\n}\r\n\r\n.cd-fold-content .cv_download {\r\n\tmargin-top: 50px;\r\n\tbutton {\r\n\t\tborder-radius: 10px;\r\n\t\t    padding-right: 15px;\r\n\t\t    background-color: $color-6;\r\n\t\t\tborder: 2px solid $color-2;\r\n\t\t\t.icon_cv {\r\n\t\t\t\tcolor: $color-2;\r\n\t\t\t}\r\n\t\t\t&:hover {\r\n\t\t\t\tborder-color: $color-6;\r\n\t\t\t\tbackground-color: $color-2;\r\n\t\t\t}\r\n\t\t\t&:hover .icon_cv {\r\n\t\t\t\tcolor: $color-6;\r\n\t\t\t}\r\n\t}\r\n\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tmargin-top: 25px;\r\n\t\t}\r\n}\r\n\r\n\t.social_contacts {\r\n\tdisplay: flex;\r\n\tmargin-top: 60px;\t\r\n\t\t\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\t\tmargin-top: 20px;\r\n\t\t\t}\t\r\n\t\ta {\r\n\t\t\tmargin-right: 0;\r\n\t\t\tmargin-left: 10px;\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t.cd-fold-content .works_list {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t\ta {\r\n\t\t\tcolor: #5B5B5B;\r\n\t\t\t&:hover {\r\n\t\t\t\tcolor: $color-2;\r\n\t\t\t}\r\n\t\t\t@media (max-width: 599px) {\r\n\t\t\t\tflex-direction:column;\r\n\t\t\t}\r\n\t\t}\r\n\t\t&-item {\r\n\t\t\tborder-bottom: 1px solid $color-5;\r\n\t\t\tpadding: 40px 0;\r\n\t\t\t\t\t\t\t\t\t@media (max-width: 599px) {\r\n\t\t\tpadding: 20px 0;\t\t\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.cd-fold-content .laptop_pic {\r\n\t    width: auto;\r\n\t    height: 150px;\r\n\t    \t    \t\t\t@media (max-width: 599px) {\r\n\r\n\t\t\t\tmargin-bottom: 15px;\r\n\t\t\t}\r\n\t}\r\n\r\n\t.cd-fold-content .laptop_pic2 {\r\n\t    width: auto;\r\n\t    height: 150px;\r\n\t    order:2;\r\n\t    \t\t\t@media (max-width: 599px) {\r\n\t\t\t\torder:0;\r\n\t\t\t\tmargin-bottom: 15px;\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n\t.cd-fold-content .my_work {\r\n\t\tdisplay: flex;\r\n\t\talign-items:center;\r\n\t\tjustify-content:space-between;\r\n\t}\r\n\r\n\t.laptop_pic--1 {\r\n\t\tbackground-image: url(../images/pr_1.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 2px;\r\n\t    background-repeat: no-repeat;\r\n\t}\r\n\r\n\t.laptop_pic--2 {\r\n\t\tbackground-image: url(../images/pr_2.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 2px;\r\n\t    background-repeat: no-repeat;\r\n\t}\r\n\r\n\t\t.laptop_pic--3 {\r\n\t\tbackground-image: url(../images/pr_3.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 2px;\r\n\t    background-repeat: no-repeat;\r\n\t}\r\n\r\n\t\t.laptop_pic--4 {\r\n\t\tbackground-image: url(../images/pr_4.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 2px;\r\n\t    background-repeat: no-repeat;\r\n\t}\r\n\r\n\t\t.laptop_pic--5 {\r\n\t\tbackground-image: url(../images/pr_5.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 2px;\r\n\t    background-repeat: no-repeat;\r\n\t}\r\n\r\n\t\t.laptop_pic--6 {\r\n\t\tbackground-image: url(../images/pr_6.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 2px;\r\n\t    background-repeat: no-repeat;\r\n\t}\r\n\r\n\r\n\t\t.laptop_pic--7 {\r\n\t\tbackground-image: url(../images/pr_7.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 7px;\r\n\t    background-repeat: no-repeat;\r\n\t}\t\r\n\r\n\t\t\t.laptop_pic--8 {\r\n\t\tbackground-image: url(../images/pr_8.jpg);\r\n\t    background-size: 158px 99px;\r\n\t    background-position: 32px 7px;\r\n\t    background-repeat: no-repeat;\r\n\t}"],"mappings":"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","names":[]}